unit Unit2;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils;

// Создадим тип двухмерного массива,
//чтобы можно было передавать матрицы в различные функции

// Причом важно описать этот тип именно в области interface,
// а то данный тип не будет виден в модуле unit1,
// куда подключается наш модуль unit2 с этим типом
type
  Ar = array [1..20, 1.. 20] of integer;


// Прототипы функций - просто их заголовки
// - это те функции которые должны быть видны в модуле unit1 - та же причина,
// что и с типом 'Ar', который должен быть виден в  unit1
procedure CreateAr(var a: Ar; ROWS : integer; COLS: integer);
function FindAveRow(a: Ar; COLS: integer; r: integer): real;
function FindAveCol(a: Ar; ROWS: integer; c: integer): real;


implementation

{Процедура заполнения матрицы рандомными числами}
//'var a' - т.к. меняем элементы матрицы
//  'ROWS' - число строк
//  'COLS' - число столбцов
procedure CreateAr(var a: Ar; ROWS : integer; COLS: integer);
var i, j: integer;
begin
   randomize;  // Для генератора случайных чисел - более случайное число
   for i:=1 to ROWS do
       for j:=1 to COLS do
           a[i,j] := random(100); // рандомное число на отрезке [0;99]
end;

{Функция нахождения среднего арифметического в СТРОКЕ}
// заметьте нет var - ничего не меняем
// 'a': матрица со строками
// 'COLS' - количество столбцов в строке
// 'r' - номер строки в которой ведётся поиск
function FindAveRow(a: Ar; COLS: integer; r: integer): real;
var s: integer; // сумма всех чисел в строке
    j: integer; // индекс столбцов
begin
   // находим сумму элементов в СТРОКЕ c номером 'r'( а не во всей матрице)
   s:= 0;
   for j:=1 to COLS do
       s:= s + a[r, j];
   // среднее арифметическое - это сумма элементов - 's',
   // делённое на их количество - 'COLS' - количестов элементов в строке
   // присваиваем это значение имени нашей функции -
   // это и есть то, что она возвращает

   // заметьте что делим мы '/', а не 'div' - т.к. СРЕДНЕЕ АРИФМЕТИЧЕСКОЕ
   // это ВЕЩЕСТВЕННОЕ ЧИСЛО
   FindAveRow := s/COLS;
end;

{Функция нахождения среднего арифметического в СТОЛБЦЕ}
// заметьте нет var - ничего не меняем
// 'a': матрица со столбцами
// 'ROWS' - количество строк в столбце
// 'с' - номер столбца в котором ведётся поиск
function FindAveCol(a: Ar; ROWS: integer; c: integer): real;
var s: integer; // сумма всех чисел в столбце
    i: integer; // индекс строк
begin
   // находим сумму элементов в СТОЛБЦЕ c номером 'c'( а не во всей матрице)
   s:= 0;
   for i:=1 to ROWS do
       s:= s + a[i, c];
   // среднее арифметическое - это сумма элементов - 's',
   // делённое на их количество - 'ROWS' - количестов элементов в столбце
   // присваиваем это значение имени нашей функции -
   // это и есть то, что она возвращает

   // заметьте что делим мы '/', а не 'div' - т.к. СРЕДНЕЕ АРИФМЕТИЧЕСКОЕ
   // это ВЕЩЕСТВЕННОЕ ЧИСЛО
   FindAveCol := s/ROWS;
end;

end.

